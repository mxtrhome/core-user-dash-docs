import{_ as i,a as u}from"./section_menu_after_trigger.84cd8553.js";import{_ as r,r as p,o as d,c as m,a as s,b as n,t as v,d as a,w as t,e as o}from"./app.18e07e69.js";const k={},h={id:"page-title",tabindex:"-1"},y=s("a",{class:"header-anchor",href:"#page-title","aria-hidden":"true"},"#",-1),b=o('<p>You can open &quot;Section menu&quot; when trying to create new section by pressing <img src="'+i+'" alt="Create Section"> button.</p><p><img src="'+u+`" alt="Section Menu after trigger"></p><p>This menu is not static, it generates dynamically depending on the place (after/before what section) it was called. On the screenshot above you can see few levels of the opened menu, the functionality allows you to create section menu with different levels depth, to make this menu more user comfortable.</p><h2 id="the-process-menu-generation" tabindex="-1"><a class="header-anchor" href="#the-process-menu-generation" aria-hidden="true">#</a> The process menu generation</h2><p>Everything starts from <code>Workflow.vue</code> (<code>views/workflows/Workflow.vue</code>) component.</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>...
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tiered-menu</span>
          <span class="token attr-name">...</span>
          <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sectionMenuItems<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),_=s("code",null,"<tiered-menu>",-1),f=n(" is a side component, the description of it you can find in "),g={href:"https://primefaces.org/primevue/tieredmenu",target:"_blank",rel:"noopener noreferrer"},w=n("official docs"),T=n(", for us now is enough to know that this component draws our menu and accepts "),M=s("code",null,":model",-1),q=n(" attribute. So "),S=s("code",null,"sectionMenuItems",-1),j=n(" there - is state property of "),x=s("code",null,"Workflow.vue",-1),A=n(" component it fills every time the user clicks "),I=s("img",{src:i,alt:"Create Section"},null,-1),L=n(" button."),V=o(`<p>In <code>methods</code> section you can find next code:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
    <span class="token function">onAddSection</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addSection</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token comment">// triggers &quot;add section process </span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>sectionMenuItems <span class="token operator">=</span> <span class="token function">getSectionMenuForActivity</span><span class="token punctuation">(</span> <span class="token comment">// fill the menu</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>getActiveSection<span class="token punctuation">,</span>
          <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleSectionMenuSelect</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>activities<span class="token punctuation">,</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>connections<span class="token punctuation">,</span>
      <span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>workflowSectionMenu<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token comment">// show the menu</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Inside this <code>onAddSection</code> handler we call <code>getSectionMenuForActivity</code> helper (<code>src/helpers/workflow/section.js</code>), which accepts 4 important params:</p>`,3),F=n("section - "),C=n("entity of the section"),B=n(" above "),E=s("img",{src:i,alt:"Create Section"},null,-1),N=n(" button (active section)"),R=s("li",null,"command - callback function, that would be called on menu item select",-1),$=s("li",null,"activities - list of all activities",-1),D=s("li",null,"connections - list of all connections",-1),W=o(`<p>Lists of <code>activities</code> and <code>connections</code> are needed to know what section is after and before current, to generate correct menu. So as you may understand <code>getSectionMenuForActivity</code> returns the <code>section menu items</code> in understandable structure for <code>&lt;tiered-menu&gt;</code> component. Inside this helper we also use next imports:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>menuActivityTypesMap<span class="token punctuation">,</span> sectionMenuItems<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/constants/canvas/sectionMenu&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This two constants are sets the view of the &quot;Section menu&quot; (<a href="#sectionmenuitems-const"><code>sectionMenuItems</code></a>) and rules for their appearance (<a href="#menuactivitytypesmap-const"><code>menuActivityTypesMap</code></a>).</p><h2 id="sectionmenuitems-const" tabindex="-1"><a class="header-anchor" href="#sectionmenuitems-const" aria-hidden="true">#</a> sectionMenuItems const</h2><p>sectionMenuItems (<code>src/helpers/workflow/section.js</code>) responds for the &quot;view&quot; of the &quot;Section menu&quot;, it contains the description of the whole levels and items in menu. So there are two types of the menu items:</p><ul><li>Items that has child elements - they don&#39;t have any actions on click on them</li><li>Items that do not have child elements - finite items that must have action on click on them</li></ul><p>The &quot;Section menu item entity&quot; for the <strong>&quot;Items that has child elements&quot;</strong> can have next properties:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token punctuation">{</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> String<span class="token punctuation">,</span>  <span class="token comment">// name of the item</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;key&quot;</span> <span class="token comment">// identifier of the item</span>
        <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;pi pi-fw pi-flag&#39;</span><span class="token punctuation">,</span> <span class="token comment">// icon next to item name (https://www.primefaces.org/diamond/icons.xhtml)</span>
        <span class="token literal-property property">visible</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span> <span class="token comment">// visibility of the item </span>
        <span class="token literal-property property">items</span><span class="token operator">:</span> Array<span class="token punctuation">,</span> <span class="token comment">// list of chaild menu items</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For the <strong>&quot;Items that do not have child elements&quot;</strong> there are 3 more properties available:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token punctuation">{</span>
        <span class="token literal-property property">duplicates</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>  <span class="token comment">// diplays possiblility to past the same item after this section (with same &#39;value&#39;)</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token comment">// role of the section that corresponds the &#39;value of this item&#39;</span>
        <span class="token literal-property property">command</span><span class="token operator">:</span> Function<span class="token punctuation">,</span> <span class="token comment">// action function that would be called on click on this item</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),O=n("The "),Y=s("code",null,"value",-1),z=n(" of such item must contain the "),G=n("Activity type"),H=n(" from "),J=s("code",null,"/constants/canvas/activities.js",-1),K=n(", and of course this type of items does not contain "),P=s("code",null,"items",-1),Q=n(" property as must not contain children."),U=s("h2",{id:"menuactivitytypesmap-const",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#menuactivitytypesmap-const","aria-hidden":"true"},"#"),n(" menuActivityTypesMap const")],-1),X=s("p",null,[s("code",null,"menuActivityTypesMap"),n(" ("),s("code",null,"src/helpers/workflow/section.js"),n(") responds for the items availability after concrete section, or in other words, it dictates what sections would be available in menu after current one.")],-1),Z=n('The structure of this object is pretty simple it contains a "key" - which is '),nn=n("Activity type"),sn=n(' and "value" - List of "Menu item IDs" available after its "key activity". "Menu item IDs" here is one of '),an=n("Activity type"),en=n(" or "),tn=s("code",null,"menuValues",-1),on=n(" (also const from "),pn=s("code",null,"src/helpers/workflow/section.js",-1),cn=n(")"),ln=n("For example after "),un=n("Start Section"),rn=n(" we have next menu items available:"),dn=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
    <span class="token punctuation">[</span>activityTypes<span class="token punctuation">.</span>Start<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        menuValues<span class="token punctuation">.</span>TriggerMenu<span class="token punctuation">,</span>
        menuValues<span class="token punctuation">.</span>ListsTriggerMenu<span class="token punctuation">,</span>
        activityTypes<span class="token punctuation">.</span>LeadCreatedTrigger<span class="token punctuation">,</span>
        activityTypes<span class="token punctuation">.</span>LeadMovedToTenantTrigger<span class="token punctuation">,</span>
        activityTypes<span class="token punctuation">.</span>LeadAddedToListTrigger<span class="token punctuation">,</span>
        activityTypes<span class="token punctuation">.</span>LeadRemovedFromListTrigger<span class="token punctuation">,</span>
        menuValues<span class="token punctuation">.</span>LeadsTriggerMenu<span class="token punctuation">,</span>
        activityTypes<span class="token punctuation">.</span>LeadCompareFieldTrigger<span class="token punctuation">,</span>
        activityTypes<span class="token punctuation">.</span>LeadStatusChangedTrigger<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion" aria-hidden="true">#</a> Conclusion</h2><p>As you may understand the <code>getSectionMenuForActivity</code> helper doing a few simple things it accepts the whole &quot;Menu object&quot; from <a href="#sectionmenuitems-const">sectionMenuItems</a>, and filters it by the rules from <a href="#menuactivitytypesmap-const">menuActivityTypesMap</a>. As result, it returns list of menu items and sections that are available after current one.</p><h2 id="add-a-new-section-menu-item" tabindex="-1"><a class="header-anchor" href="#add-a-new-section-menu-item" aria-hidden="true">#</a> Add a new &quot;Section Menu Item&quot;</h2>`,4),mn=n('First of all ensure that you have the "Activity" with your type in '),vn=n("Activity types list"),kn=n(" and corresponding "),hn=n("Section modal"),yn=n("."),bn=o(`<p>Basically all you need is to set few constants in <code>src/helpers/workflow/section.js</code>: So when your &quot;Activity&quot; exists and has a &quot;Modal&quot; you have to find a place for it in &quot;Section menu&quot;: in <a href="#sectionmenuitems-const">sectionMenuItems</a> you can past it inside existing <code>items</code> prop, or create your own submenu (in second case you also need to add you submenu name to the <code>menuValues</code> const) and past it there.</p><p>As result, you will have something like that:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">sectionMenuItems</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">command</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
    <span class="token operator">...</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Menu&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> menuValues<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Submenu&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">value</span><span class="token operator">:</span> menuValues<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                    <span class="token punctuation">{</span> 
                        <span class="token literal-property property">duplicates</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// can this section be added after it self</span>
                        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Your item name&#39;</span><span class="token punctuation">,</span>
                        <span class="token literal-property property">value</span><span class="token operator">:</span> activityTypes<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token string">&#39;your activity type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                        <span class="token literal-property property">type</span><span class="token operator">:</span> sectionRoles<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token string">&#39;role of your activity&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                        command 
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token operator">...</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once item is added you have to set the list of available menu items after your item. So just add your section name as a &quot;key&quot; and list all the menu items to the <a href="#menuactivitytypesmap-const">menuActivityTypesMap</a> The result will look like that:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> menuActivityTypesMap <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">[</span>activityTypes<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token string">&#39;your activity type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token operator">...</span>
        menuValues<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token string">&#39;some menu name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        menuValues<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token string">&#39;some submenu name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        activityTypes<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token string">&#39;some activity type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token operator">...</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And the last thing you need here is to add your section (with you menu items) after some other sections. For example lets say you want yur section to be available after &quot;Start&quot; section, just find this section in the list and add your &quot;menu items&quot; and &quot;activity type&quot;:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> menuActivityTypesMap <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token punctuation">[</span>activityTypes<span class="token punctuation">.</span>Start<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token operator">...</span>
        menuValues<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token string">&#39;your menu name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        menuValues<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token string">&#39;your submenu name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        activityTypes<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token string">&#39;your activity type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function _n(c,fn){const l=p("ExternalLinkIcon"),e=p("RouterLink");return d(),m("div",null,[s("h1",h,[y,n(" "+v(c.$page.title),1)]),b,s("p",null,[_,f,s("a",g,[w,a(l)]),T,M,q,S,j,x,A,I,L]),V,s("ul",null,[s("li",null,[F,a(e,{to:"/workflows/sections.html#activity-entity"},{default:t(()=>[C]),_:1}),B,E,N]),R,$,D]),W,s("p",null,[O,Y,z,a(e,{to:"/workflows/sections.html#section-types"},{default:t(()=>[G]),_:1}),H,J,K,P,Q]),U,X,s("p",null,[Z,a(e,{to:"/workflows/sections.html#section-types"},{default:t(()=>[nn]),_:1}),sn,a(e,{to:"/workflows/sections.html#section-types"},{default:t(()=>[an]),_:1}),en,tn,on,pn,cn]),s("p",null,[ln,a(e,{to:"/workflows/sections.html#start"},{default:t(()=>[un]),_:1}),rn]),dn,s("p",null,[mn,a(e,{to:"/workflows/sections.html#section-types"},{default:t(()=>[vn]),_:1}),kn,a(e,{to:"/workflows/sectionModals.html"},{default:t(()=>[hn]),_:1}),yn]),bn])}const Tn=r(k,[["render",_n],["__file","sectionMenu.html.vue"]]);export{Tn as default};
